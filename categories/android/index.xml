<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on Andy Dyer</title><link>https://andydyer.org/categories/android/</link><description>Recent content in Android on Andy Dyer</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 16 Mar 2021 10:31:36 +0100</lastBuildDate><atom:link href="https://andydyer.org/categories/android/index.xml" rel="self" type="application/rss+xml"/><item><title>Flexbox Layout Behavior in Jetpack Compose</title><link>https://andydyer.org/blog/2021/03/16/flexbox-layout-behavior-in-jetpack-compose/</link><pubDate>Tue, 16 Mar 2021 10:31:36 +0100</pubDate><guid>https://andydyer.org/blog/2021/03/16/flexbox-layout-behavior-in-jetpack-compose/</guid><description>&lt;blockquote&gt;
&lt;p&gt;Originally published on the &lt;a href="https://engineering.zalando.com/posts/2021/03/flexbox-layout-behavior-in-jetpack-compose.html"&gt;Zalando Engineering Blog&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id="introduction"&gt;Introduction&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://drafts.csswg.org/css-flexbox-1/"&gt;CSS Flexible Box Layout specification&lt;/a&gt; (AKA flexbox) is a useful abstraction for describing layouts in a platform agnostic way. For this reason, it is widely used on the web and even &lt;a href="https://github.com/google/flexbox-layout"&gt;on mobile&lt;/a&gt;. Readers familiar with &lt;a href="https://developer.android.com/reference/androidx/constraintlayout/widget/ConstraintLayout"&gt;&lt;code&gt;ConstraintLayout&lt;/code&gt;&lt;/a&gt; can think of flexbox as conceptually similar to the &lt;a href="https://developer.android.com/reference/androidx/constraintlayout/helper/widget/Flow"&gt;&lt;code&gt;Flow&lt;/code&gt;&lt;/a&gt; virtual layout it supports. This type of layout is ideal for grids or other groups of views with varying sizes.&lt;/p&gt;</description></item><item><title>Jetpack Benchmark on Firebase Test Lab</title><link>https://andydyer.org/blog/2020/03/06/jetpack-benchmark-on-firebase-test-lab/</link><pubDate>Fri, 06 Mar 2020 10:30:55 +0100</pubDate><guid>https://andydyer.org/blog/2020/03/06/jetpack-benchmark-on-firebase-test-lab/</guid><description>&lt;p&gt;As previously outlined in my &lt;a href="http://andydyer.org/blog/2019/12/22/appcraft-faster-than-a-speeding-release-train/"&gt;talk at Mobius Conference&lt;/a&gt; in Saint Petersburg last year, our team at Zalando is building a server-driven UI platform we call AppCraft. AppCraft allows us to add or update screens in &lt;a href="https://play.google.com/store/apps/details?id=de.zalando.mobile"&gt;our app&lt;/a&gt; with only server changes instead of the normal app release constrained way of doing things.&lt;/p&gt;
&lt;p&gt;On the client side, we are building every screen the same way: fetch layout &amp;amp; data from the server, parse it, and render it.&lt;/p&gt;</description></item><item><title>AppCraft: Faster Than a Speeding Release Train</title><link>https://andydyer.org/blog/2019/12/22/appcraft-faster-than-a-speeding-release-train/</link><pubDate>Sun, 22 Dec 2019 16:45:32 +0000</pubDate><guid>https://andydyer.org/blog/2019/12/22/appcraft-faster-than-a-speeding-release-train/</guid><description>&lt;p&gt;It was a pleasure speaking at &lt;a href="https://mobius-piter.ru/en/"&gt;Mobius Conference&lt;/a&gt; in Saint Petersburg this past May. I never got around to finishing the transcript of the talk I intended to write, but you can find the slides on &lt;a href="https://speakerdeck.com/abdyer/appcraft-faster-than-a-speeding-release-train"&gt;Speaker Deck&lt;/a&gt; and the video on &lt;a href="https://www.youtube.com/watch?v=Xo45nwRxtik&amp;amp;feature=youtu.be&amp;amp;t=20"&gt;YouTube&lt;/a&gt;:&lt;/p&gt;
&lt;p/&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Xo45nwRxtik?start=20" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;</description></item><item><title>Introducing Biografy</title><link>https://andydyer.org/blog/2017/12/24/introducing-biografy/</link><pubDate>Sun, 24 Dec 2017 20:53:35 +0000</pubDate><guid>https://andydyer.org/blog/2017/12/24/introducing-biografy/</guid><description>&lt;h3 id="what-is-biografy"&gt;What is Biografy?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.dandydev.biografy"&gt;Biografy&lt;/a&gt; is a lifelogging app that automatically builds a timeline of each day. The &lt;a href="https://andydyer.org/images/biografy/events.png"&gt;&lt;em&gt;Events&lt;/em&gt;&lt;/a&gt; view logs events from various apps including music, podcasts, videos, calls and chats. Each event includes rich detail such as the time, activity (stationary, walking, biking, etc.), and location/place. The &lt;a href="https://andydyer.org/images/biografy/motion.png"&gt;&lt;em&gt;Motion&lt;/em&gt;&lt;/a&gt; view lists car/transit trips, bike rides, runs, and walks. With the &lt;a href="https://andydyer.org/images/biografy/map.png"&gt;&lt;em&gt;Map&lt;/em&gt;&lt;/a&gt; view, you can see where you were when each event occurred and gain insights like where you spend your time based on the clusters of pins. Finally, the &lt;a href="https://andydyer.org/images/biografy/notes.png"&gt;&lt;em&gt;Notes&lt;/em&gt;&lt;/a&gt; view is perfect for adding context to remember each day. Want to travel back in time? Simply tap the toolbar to choose the date.&lt;/p&gt;</description></item><item><title>React Native: Is It Worth It?</title><link>https://andydyer.org/blog/2017/11/27/react-native-is-it-worth-it/</link><pubDate>Mon, 27 Nov 2017 21:35:15 +0000</pubDate><guid>https://andydyer.org/blog/2017/11/27/react-native-is-it-worth-it/</guid><description>&lt;h3 id="intro"&gt;Intro&lt;/h3&gt;
&lt;p&gt;When new technologies start gaining momentum in the Android community, the pragmatic (or lazy) among us eventually have to ask ourselves, “Is it worth it?” After the initial arrival and departure of the hype train, some of these become trusted tools we use in almost every app. Think &lt;a href="https://github.com/ReactiveX/RxJava"&gt;RxJava&lt;/a&gt; and &lt;a href="https://google.github.io/dagger/"&gt;Dagger&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://facebook.github.io/react-native/"&gt;React Native&lt;/a&gt; may be on its way to earning a place in the same club. Once we get past the fact that JavaScript on Android and HTML in JavaScript seem pretty damn weird at first, there’s a lot to like. Seeing your changes on a device almost instantly is a love-at-first-sight kind of thing. And rethinking your app architecture as a series of actions, state changes, and UI render phases can eliminate a surprising number of silly bugs.&lt;/p&gt;</description></item><item><title>Multiple Developers, One App: How to Not Break Everything</title><link>https://andydyer.org/blog/2016/10/22/multiple-developers-one-app-how-to-not-break-everything/</link><pubDate>Sat, 22 Oct 2016 13:00:39 -0500</pubDate><guid>https://andydyer.org/blog/2016/10/22/multiple-developers-one-app-how-to-not-break-everything/</guid><description>&lt;p&gt;This was my third time attending the Big Android BBQ in Hurst, TX and my third time to present at it. Perhaps my favorite thing about the conference (aside from the obvious BBQ) is reconnecting with old friends and making new ones. This year I&amp;rsquo;ve had the pleasure of meeting people from all over the world and learning that we know a lot of the same people. Small world, indeed.&lt;/p&gt;</description></item><item><title>Things That Suck About Android Development</title><link>https://andydyer.org/blog/2016/03/18/things-that-suck-about-android-development/</link><pubDate>Fri, 18 Mar 2016 13:17:48 +0100</pubDate><guid>https://andydyer.org/blog/2016/03/18/things-that-suck-about-android-development/</guid><description>&lt;p&gt;I presented &amp;ldquo;Things That Suck About Android Development&amp;rdquo; at this year&amp;rsquo;s &lt;a href="http://mdevcon.com/"&gt;mdevcon&lt;/a&gt; conference in Amsterdam. It&amp;rsquo;s a great conference in an amazing city. I highly recommend it to anyone developing mobile apps.&lt;/p&gt;
&lt;p&gt;The title is admittedly a bit sensational, but my goal was to highlight many of the painful parts about developing for Android and how to avoid/fix them.&lt;/p&gt;
&lt;p&gt;The slides are available &lt;a href="https://speakerdeck.com/abdyer/things-that-suck-about-android-development"&gt;here on Speaker Deck&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Using a Third Party FAB with CoordinatorLayout</title><link>https://andydyer.org/blog/2015/06/28/using-a-third-party-fab-with-coordinatorlayout/</link><pubDate>Sun, 28 Jun 2015 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2015/06/28/using-a-third-party-fab-with-coordinatorlayout/</guid><description>&lt;p&gt;Before the Design Support Library was announced at Google I/O last month, I had numerous third party libraries in my projects for various elements of Material Design. I&amp;rsquo;ve enjoyed replacing the nav drawer, tabs, and parallax scrolling libraries with their support library counterparts. However, on one of my projects, we needed an expanding floating action button (FAB) similar to the one in &lt;a href="https://play.google.com/store/apps/details?id=com.google.android.apps.inbox"&gt;Inbox&lt;/a&gt;, which the support library does not currently provide.&lt;/p&gt;</description></item><item><title>The Time I Interviewed at Google</title><link>https://andydyer.org/blog/2015/06/09/the-time-i-interviewed-at-google/</link><pubDate>Tue, 09 Jun 2015 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2015/06/09/the-time-i-interviewed-at-google/</guid><description>&lt;p&gt;I&amp;rsquo;ve had a pretty big secret for the past month or so; something that only my friends and family know about. We&amp;rsquo;ve all been there, sneaking around interviewing for a new job like we&amp;rsquo;re having an affair. Only this time, it was different. As an Android developer, this was like trying out for the majors. No&amp;hellip;seriously, y&amp;rsquo;all&amp;hellip;Google invited me to interview.&lt;/p&gt;
&lt;p&gt;My adventure started early last month as I was triaging my inbox. There were the usual spammy recruiter emails seeking &amp;ldquo;rock stars&amp;rdquo; and &amp;ldquo;ninjas&amp;rdquo; with skills in technologies I abandoned years ago. I skimmed what appeared to be another of these and stopped when I read &amp;ldquo;mobile is a huge priority for us here at Google&amp;rdquo;. Did I read that correctly? Apparently I did. Where did this come from? The domain was google.com. &lt;a href="http://cdn.meme.am/instances/500x/54979149.jpg"&gt;For real tho&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Loading a List of Objects from Firebase</title><link>https://andydyer.org/blog/2015/04/06/loading-a-list-of-objects-from-firebase/</link><pubDate>Mon, 06 Apr 2015 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2015/04/06/loading-a-list-of-objects-from-firebase/</guid><description>&lt;p&gt;I&amp;rsquo;ve been working with &lt;a href="https://www.firebase.com/"&gt;Firebase&lt;/a&gt; lately in preparation for adding data synchronization to my &lt;a href="https://play.google.com/store/apps/details?id=com.dandydev.medialibrary"&gt;Music Library&lt;/a&gt; app. Their &lt;a href="https://www.firebase.com/docs/android/quickstart.html"&gt;docs&lt;/a&gt; did a great job of getting me set up. Using the &lt;a href="https://github.com/firebase/firebase-login-demo-android"&gt;sample app&lt;/a&gt; as a guide, I even got Google+ OAuth working without much trouble. From there, it didn&amp;rsquo;t take long to load data into a Firebase instance partitioned by Google account. All that was left was to query the data out of Firebase and I&amp;rsquo;d be able to see the sync magic in action.&lt;/p&gt;</description></item><item><title>Why I'm Unironically Carrying This Small, Older Android Phone</title><link>https://andydyer.org/blog/2015/02/19/why-im-unironically-carrying-this-small-older-android-phone/</link><pubDate>Thu, 19 Feb 2015 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2015/02/19/why-im-unironically-carrying-this-small-older-android-phone/</guid><description>&lt;p&gt;I thoroughly enjoyed my last night in Berlin a little over a week ago; so much that I didn&amp;rsquo;t notice my phone was missing until the end of the night. Shake your head and say it couldn&amp;rsquo;t happen to you. I thought the same thing until it did. Normally, I keep my phone in one of my front pockets, but I was wearing a coat that covered the pocket, making it a bit more difficult to grab my phone quickly to check Google Maps. Since my coat has a side access pocket in the chest, I stowed my phone there while walking around. I&amp;rsquo;m guessing a skillful thief at the last bar spotted my phone in that side pocket and was able to slide it out without me knowing. I was in a crowded room and often looking to one side as I talked to different people. Self-shaming thoughts aside, sometimes it happens.&lt;/p&gt;</description></item><item><title>MCE Conference 2015 - Automated Testing for Modern Android Applications</title><link>https://andydyer.org/blog/2015/02/08/mce-conference-2015-automated-testing-for-modern-android-applications/</link><pubDate>Sun, 08 Feb 2015 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2015/02/08/mce-conference-2015-automated-testing-for-modern-android-applications/</guid><description>&lt;p&gt;It was an honor to speak at and attend &lt;a href="http://mceconf.com/"&gt;MCE Conference&lt;/a&gt; in Warsaw last week. I participated in a workshop where I learned about prototyping with Android and Arduinos. I attended talks about Groovy, Kotlin, Proguard, design, scaling apps for emerging markets, and some handy new libraries.&lt;/p&gt;
&lt;p&gt;That alone easily makes MCE one of the best conferences I&amp;rsquo;ve been to. On top of all that, the networking with fellow speakers and attendees was a personal highlight. To everyone I met, I hope to stay in touch until our paths cross again. And I hope you caught up on your sleep!&lt;/p&gt;</description></item><item><title>Running Shell Commands with Gradle and a Better Way to Delombok</title><link>https://andydyer.org/blog/2015/01/22/running-shell-commands-with-gradle-and-a-better-way-to-delombok/</link><pubDate>Thu, 22 Jan 2015 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2015/01/22/running-shell-commands-with-gradle-and-a-better-way-to-delombok/</guid><description>&lt;p&gt;A few months ago, I &lt;a href="http://andydyer.org/blog/2014/09/29/delombok-and-javadoc-with-gradle/"&gt;posted&lt;/a&gt; about how to use Gradle tasks to &amp;ldquo;&lt;a href="http://projectlombok.org/features/delombok.html"&gt;delombok&lt;/a&gt;&amp;rdquo; code using Lombok annotations before generating Javadocs. My solution for running the delombok task used Ant and was based on what I found after the requisite Google &amp;amp; StackOverflow searching. This worked just fine until Android Studio 1.0 and the associated Gradle build tools were released at the end of the year.&lt;/p&gt;
&lt;p&gt;The crux of the problem appeared to be a change in the way dependencies are merged during compilation. Countless &amp;ldquo;package does not exist errors&amp;rdquo; were causing the delombok task to fail. I first attempted to solve this by changing the way the classpath was built in the task. While I was able to reduce the number of errors, I didn&amp;rsquo;t succeed in completely fixing the problem. All the while, running the delombok task directly from the command line with &lt;code&gt;java -jar build-libs/lombok.jar delombok src -d build/src-delomboked&lt;/code&gt; ran successfully.&lt;/p&gt;</description></item><item><title>Music Library 3.0 - Material Design Update</title><link>https://andydyer.org/blog/2014/11/02/music-library-3.0-material-design-update/</link><pubDate>Sun, 02 Nov 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/11/02/music-library-3.0-material-design-update/</guid><description>&lt;img src="https://andydyer.org/images/music_library_icon.png" alt="Music Library" style="width: 150px; float: left; margin-right: 20px" /&gt;
I started developing [Music Library](https://play.google.com/store/apps/details?id=com.dandydev.medialibrary) about four years ago when I wanted an app for organizing my record collection. Armed with my Nexus One, Eclipse, and a copy of Apress' [Pro Android](http://www.amazon.com/gp/product/1430246804/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1430246804&amp;linkCode=as2&amp;tag=slacod-20&amp;linkId=FMLK73AOGDPPJEM3), I spent my nights and weekends learning the inner workings of my now-favorite mobile OS.
&lt;p&gt;Over the years, Music Library has been a playground of sorts for exploring various open source libraries, patterns, and best practices. While there is still a fair amount of code I would write differently today (I&amp;rsquo;m looking at you, ContentProvider), the app has been and continues to be an enjoyable side project.&lt;/p&gt;</description></item><item><title>BABBQ5 - Automated Testing for Modern Android Applications</title><link>https://andydyer.org/blog/2014/10/17/babbq5-automated-testing-for-modern-android-applications/</link><pubDate>Fri, 17 Oct 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/10/17/babbq5-automated-testing-for-modern-android-applications/</guid><description>&lt;p&gt;This is my third year to attend and present at the &lt;a href="http://www.bigandroidbbq.com/"&gt;Big Android BBQ&lt;/a&gt;. &lt;a href="http://news.bigandroidbbq.com/2014/09/speaker-spotlight-andrew-dyer.html"&gt;My talk&lt;/a&gt; this year showed how to prepare an Android app for automated testing using mocking, dependency injection, and Google&amp;rsquo;s super fast Espresso test runner. You can find the presentation on &lt;a href="https://speakerdeck.com/abdyer/babbq5-automated-testing-for-modern-android-applications"&gt;Speaker Deck&lt;/a&gt; and the sample code on &lt;a href="https://github.com/abdyer/android-test-demo"&gt;GitHub&lt;/a&gt;.
&lt;br/&gt;&lt;/p&gt;</description></item><item><title>Hosting Android Dependencies on GitHub</title><link>https://andydyer.org/blog/2014/10/05/hosting-android-dependencies-on-github/</link><pubDate>Sun, 05 Oct 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/10/05/hosting-android-dependencies-on-github/</guid><description>&lt;p&gt;As I mentioned in my &lt;a href="http://andydyer.org/blog/2014/09/29/delombok-and-javadoc-with-gradle/"&gt;last post&lt;/a&gt;, I&amp;rsquo;m developing an SDK at work. The libraries I use most frequently in my apps are all included as Maven dependencies. Adding a line to my &lt;code&gt;build.gradle&lt;/code&gt; file is much preferred to downloading a JAR file. To make the SDK as easy as possible for developers to include in their projects, I wanted to deliver it the same way.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://central.sonatype.org/"&gt;Maven Central&lt;/a&gt; is the de facto repository for open source library hosting. Since the SDK I&amp;rsquo;m developing is part of a product and as such will not be open source, I needed to find another place to host the binary that would still allow it to be included via Maven.&lt;/p&gt;</description></item><item><title>Delombok and Javadoc with Gradle</title><link>https://andydyer.org/blog/2014/09/29/delombok-and-javadoc-with-gradle/</link><pubDate>Mon, 29 Sep 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/09/29/delombok-and-javadoc-with-gradle/</guid><description>&lt;p&gt;I recently had my first experience working with Javadoc to generate documentation for an SDK I&amp;rsquo;ve been developing at work. In general, I&amp;rsquo;m in the &amp;ldquo;&lt;a href="http://blog.codinghorror.com/coding-without-comments/"&gt;clean code doesn&amp;rsquo;t need comments&lt;/a&gt;&amp;rdquo; camp, but SDKs tend to be a limited view into a larger abstraction, so good documentation is a necessity.&lt;/p&gt;
&lt;p&gt;Javadoc has been around since the introduction of the Java language, so I won&amp;rsquo;t include a primer here. If you want to learn more, &lt;a href="http://www.oracle.com/technetwork/java/javase/documentation/javadoc-137458.html"&gt;Oracle has you covered&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Android's Material Design and The Bauhaus</title><link>https://andydyer.org/blog/2014/07/13/androids-material-design-and-the-bauhaus/</link><pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/07/13/androids-material-design-and-the-bauhaus/</guid><description>&lt;p&gt;Since Android Gingerbread (v2.3), loyalists know that each version has an Easter egg that can be accessed by repeatedly tapping the version number on the Settings &amp;gt; About screen. The Android &amp;ldquo;L&amp;rdquo; Preview is no exception.&lt;/p&gt;
&lt;p&gt;While test driving the new version, I naturally had to see what Google had hidden for me in their latest release. Previous versions have had everything from &lt;a href="https://www.youtube.com/watch?v=PeAFCIvqNxc"&gt;gingerbread zombies&lt;/a&gt; to &lt;a href="https://www.youtube.com/watch?v=DfY73GBBHxg"&gt;Nyandroids&lt;/a&gt; and a &lt;a href="https://www.youtube.com/watch?v=iN-nJdAJS7g"&gt;pile of jelly beans&lt;/a&gt;. The Android &amp;ldquo;L&amp;rdquo; Preview build has a &lt;a href="https://www.youtube.com/watch?v=_He5MIYJas8"&gt;simple animation of random overlapping red and blue rectangles&lt;/a&gt;. Several Android blogs mentioned this, but dismissed it as &lt;a href="http://www.androidcentral.com/android-l-Previews-easter-egg-webdriver-torso"&gt;mysterious&lt;/a&gt; and &lt;a href="http://www.slashgear.com/hands-on-with-the-android-l-features-google-didnt-mention-27335613/"&gt;strange&lt;/a&gt;. While these random rectangles are clearly the same used by Google&amp;rsquo;s &lt;a href="http://www.bbc.com/news/technology-27778071"&gt;WebDriver Torso&lt;/a&gt; YouTube video quality testing, so far everyone seems to have missed the most obvious explanation.&lt;/p&gt;</description></item><item><title>Fun with Android Wear</title><link>https://andydyer.org/blog/2014/07/12/fun-with-android-wear/</link><pubDate>Sat, 12 Jul 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/07/12/fun-with-android-wear/</guid><description>&lt;p&gt;&lt;img src="https://andydyer.org/images/deutschuhr_androidwear.png" alt="Deutsch Uhr" style="width: 140px; float: left; margin-right: 20px" /&gt;I got my &lt;a href="https://play.google.com/store/devices/details?id=lg_g_watch_black"&gt;LG G Android Wear&lt;/a&gt; smart watch earlier this week and dove right into developing for it.&lt;/p&gt;
&lt;p&gt;My first project was &lt;a href="https://play.google.com/store/apps/details?id=com.dandydev.deutschuhr"&gt;Deutsch Uhr&lt;/a&gt;, a text-based German language watch face inspired by &lt;a href="https://www.google.com/url?q=http://www.mypebblefaces.com/apps/1446/1484/&amp;amp;sa=D&amp;amp;usg=AFQjCNHn1MUA0IUtwhRwqFGHYKorEIcmLg"&gt;my favorite Pebble watch face&lt;/a&gt;. I had fun adding animations for the hour/minute/day changes and learning what makes a Wear app tick (pun intended, I always do). A big thanks to my friend Daniel Ward for help getting started. Be sure to check out his &lt;a href="http://phandroid.com/2014/07/06/custom-android-wear-watch-faces-binary-clock/"&gt;Binary Watch Face&lt;/a&gt;, which was the first Android Wear watch face to appear on Google Play a couple weeks ago.&lt;/p&gt;</description></item><item><title>Google I/O 2014: An Android Developer's Perspective</title><link>https://andydyer.org/blog/2014/06/28/google-i/o-2014-an-android-developers-perspective/</link><pubDate>Sat, 28 Jun 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/06/28/google-i/o-2014-an-android-developers-perspective/</guid><description>&lt;p&gt;This year’s &lt;a href="https://www.youtube.com/watch?v=wtLJPvx7-ys"&gt;Google I/O&lt;/a&gt; developer conference once again gave developers plenty to be excited about. As expected, we heard about the next release of the Android operating system, Android Wear smart watches, and updated development tools. Rumored products &amp;amp; services such as Android TV, Android Auto, and Google Fit were also announced. Perhaps the most exciting and far-reaching announcement was the new Material Design language, which replaces the now dated looking Holo with a consistent look for all platforms. Enterprise users can now securely separate work &amp;amp; personal data with the Android Work suite of services. Finally, Android Cardboard showed us how to make a DIY version of an Oculus Rift style VR headset.&lt;/p&gt;</description></item><item><title>Droidcon Berlin 2014: Froyo to KitKat</title><link>https://andydyer.org/blog/2014/05/09/droidcon-berlin-2014-froyo-to-kitkat/</link><pubDate>Fri, 09 May 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/05/09/droidcon-berlin-2014-froyo-to-kitkat/</guid><description>&lt;p&gt;I&amp;rsquo;m thrilled to be speaking at Droidcon Berlin this year. I fell in love with the city on my first visit and the conference was a perfect reason for another visit. Attempts to try out my very basic German skills have shown me that I have a long way to go. However, I am proud to say that I have managed to make a few purchases without panicking and falling back to English.&lt;/p&gt;</description></item><item><title>Developing for Android Tutorial</title><link>https://andydyer.org/blog/2014/04/04/developing-for-android-tutorial/</link><pubDate>Fri, 04 Apr 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/04/04/developing-for-android-tutorial/</guid><description>&lt;p&gt;I gave a two hour tutorial on developing for Android at work today for our weekly tech talk. Similar in style to my coworker &lt;a href="http://aaronortbals.com/"&gt;Aaron Ortbals&amp;rsquo;&lt;/a&gt; &lt;a href="https://github.com/aortbals/ember-github-example"&gt;tutorial on Ember.js&lt;/a&gt;, I showed how to build a client for &lt;a href="https://developer.github.com/v3/activity/events/"&gt;GitHub&amp;rsquo;s Events API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Topics included:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Project setup&lt;/li&gt;
&lt;li&gt;Gradle dependencies&lt;/li&gt;
&lt;li&gt;API requests &amp;amp; JSON parsing&lt;/li&gt;
&lt;li&gt;Activities &amp;amp; fragments&lt;/li&gt;
&lt;li&gt;Lists, adapters, and custom item layouts&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can find the source code and the slides for the tutorial &lt;a href="https://github.com/abdyer/android-intro"&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Presenting: Wrist Presenter for Android and the Pebble Smartwatch</title><link>https://andydyer.org/blog/2014/03/07/presenting-wrist-presenter-for-android-and-the-pebble-smartwatch/</link><pubDate>Fri, 07 Mar 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/03/07/presenting-wrist-presenter-for-android-and-the-pebble-smartwatch/</guid><description>&lt;img src="https://andydyer.org/images/wristpresenter_icon@2x.png" alt="Wrist Presenter" style="width: 150px; float: left; margin-right: 20px" /&gt;
Shortly after getting a Pebble Smartwatch this past Christmas, my coworker and all-around-cool-dude [Matthew Morey](http://matthewmorey.com/) asked me if I'd be interested in developing the Android version of his [Wrist Presenter iOS app](http://matthewmorey.com/wrist-presenter/). Luckily, he already had a rock solid Pebble app developed, so I didn't have to flex my meager C programming skills.
&lt;p&gt;&lt;a href="http://wristpresenter.com/"&gt;Wrist Presenter&lt;/a&gt; turns your Pebble Smartwatch into a remote for presentations running on your Android or iOS device.&lt;/p&gt;</description></item><item><title>Introducing Kollektor</title><link>https://andydyer.org/blog/2013/12/28/introducing-kollektor/</link><pubDate>Sat, 28 Dec 2013 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2013/12/28/introducing-kollektor/</guid><description>&lt;h5 id="why-a-new-app"&gt;Why a new app?&lt;/h5&gt;
&lt;p&gt;When I first decided to get into Android development, I created the &lt;a href="https://play.google.com/store/apps/details?id=com.dandydev.medialibrary"&gt;Music Library&lt;/a&gt; app to catalog my vinyl collection. It served me well as I learned the ins and outs of Android programming including &lt;a href="http://developer.android.com/guide/topics/providers/content-providers.html"&gt;content providers&lt;/a&gt;, interacting with other applications via &lt;a href="http://developer.android.com/reference/android/content/Intent.html"&gt;intents&lt;/a&gt;, working with the file system to save/load images, making API requests, etc. In order to test the workings of the Android app market, I published the ad supported Music Library Free and the paid Music Library versions of the app. In addition to not displaying ads, Music Library also included the ability to backup your collection to the device&amp;rsquo;s SD card and export data to a Google Drive spreadsheet.&lt;/p&gt;</description></item><item><title>Signing Volley Requests with Scribe</title><link>https://andydyer.org/blog/2013/12/15/signing-volley-requests-with-scribe/</link><pubDate>Sun, 15 Dec 2013 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2013/12/15/signing-volley-requests-with-scribe/</guid><description>&lt;p&gt;When I initially needed to integrate OAuth request signing with &lt;a href="https://android.googlesource.com/platform/frameworks/volley"&gt;Volley&lt;/a&gt; in my Android app, I used the &lt;a href="https://code.google.com/p/oauth-signpost/"&gt;Signpost library&lt;/a&gt;. It was fairly straightforward to build a URL, pass it to the Signpost OAuthConsumer, and retrieve a new string with the appropriate OAuth parameters added. Unfortunately, as you can see from the &lt;a href="https://github.com/mttkay/signpost/commits/master"&gt;commit history&lt;/a&gt;, there has been very little activity over the past year.&lt;/p&gt;
&lt;p&gt;Increasingly, I see recommendations for &lt;a href="https://github.com/fernandezpablo85/scribe-java"&gt;Scribe&lt;/a&gt;. The project is very active and it makes &lt;a href="https://github.com/fernandezpablo85/scribe-java/wiki/getting-started"&gt;implementing OAuth request signing&lt;/a&gt; as easy as it&amp;rsquo;s likely to get.&lt;/p&gt;</description></item><item><title>TechStreet Houston: Intro to Android Programming</title><link>https://andydyer.org/blog/2013/11/20/techstreet-houston-intro-to-android-programming/</link><pubDate>Wed, 20 Nov 2013 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2013/11/20/techstreet-houston-intro-to-android-programming/</guid><description>&lt;p&gt;I&amp;rsquo;m giving another Intro to Android Programming talk at &lt;a href="http://www.techstreethouston.com/"&gt;TechStreet Houston&lt;/a&gt; today. The slides are very similar to my previous talk at Houston TechFest, but &lt;a href="https://docs.google.com/presentation/d/1r6jf2VPOETDOR7TcFGw_qPymbYOEfmaDGC5v2Hib31o/edit?usp=sharing"&gt;here is the link&lt;/a&gt; for today&amp;rsquo;s presentation.&lt;/p&gt;</description></item><item><title>Things I Learned at Big Android BBQ 2013</title><link>https://andydyer.org/blog/2013/10/13/things-i-learned-at-big-android-bbq-2013/</link><pubDate>Sun, 13 Oct 2013 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2013/10/13/things-i-learned-at-big-android-bbq-2013/</guid><description>&lt;ul&gt;
&lt;li&gt;T-Mobile reception is still terrible at the conference center.&lt;/li&gt;
&lt;li&gt;Alcohol purchases spike in the City of Hurst as a result of the conference.&lt;/li&gt;
&lt;li&gt;The guys from &lt;a href="http://www.willowtreeapps.com/"&gt;Willow Tree Apps&lt;/a&gt; have released some awesome Android open source libraries (&lt;a href="https://github.com/derekbrameyer/android-betterpickers"&gt;BetterPickers&lt;/a&gt;, &lt;a href="https://github.com/willowtreeapps/OAK"&gt;OAK&lt;/a&gt;, and &lt;a href="https://github.com/JonathanNye/rpatch"&gt;RPatch&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s worth the short drive to &lt;a href="http://rootscoffeehouse.com/north-richland-hills/"&gt;Roots Coffee&lt;/a&gt; each morning.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.highrollerusa.com/shop/"&gt;High Roller&lt;/a&gt; makes adult size big wheels. They are a ton of fun to ride.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.oppo.com/"&gt;Oppo&lt;/a&gt; makes some pretty sweet phones. Their &lt;a href="http://www.theverge.com/2013/9/23/4762618/oppo-n1-announced-cyanogenmod-android-rotating-camera"&gt;N1 will ship with&lt;/a&gt; &lt;a href="http://www.cyanogenmod.org/"&gt;CyanogenMod&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I wish I had signed up for the &lt;a href="http://www.google.com/glass/start/how-to-get-one/"&gt;Google Glass Explorer&lt;/a&gt; program.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://plus.google.com/112937922652870132700"&gt;Daniel Ward&lt;/a&gt; bears a &lt;a href="https://lh3.googleusercontent.com/-y68HoUyN5-Y/Uln1HvB7fRI/AAAAAAAARcw/D--lqBnDrJg/w852-h474/daniel-obiwan.jpg"&gt;strong resemblance&lt;/a&gt; to Ewan McGregor&amp;rsquo;s Obi Wan Kenobi.&lt;/li&gt;
&lt;li&gt;Google makes Android. Anyone who attended the closing keynote/panel will understand why this is funny.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://plus.google.com/111558319297322546031"&gt;Ray Walters&amp;rsquo;&lt;/a&gt; BBQ: OMG. So good!&lt;/li&gt;
&lt;li&gt;Agile is dead. Liquid will soon be the new hotness. More on this later.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I thoroughly enjoyed the conference once again this year. I highly recommend it to anyone who has anything to do with Android.&lt;/p&gt;</description></item><item><title>Big Android BBQ 2013 - Android Open Source Libraries You Need in Your Life</title><link>https://andydyer.org/blog/2013/10/11/big-android-bbq-2013-android-open-source-libraries-you-need-in-your-life/</link><pubDate>Fri, 11 Oct 2013 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2013/10/11/big-android-bbq-2013-android-open-source-libraries-you-need-in-your-life/</guid><description>&lt;p&gt;This is my second year to speak at the &lt;a href="http://www.bigandroidbbq.com/"&gt;Big Android BBQ&lt;/a&gt; in Hurst, TX. My talk covered a slew of handy open source libraries to accelerate the development of modern Android applications.&lt;/p&gt;
&lt;p&gt;The slides are available on &lt;a href="https://docs.google.com/file/d/0B7Daz4FEcG6Dbkx2RGVjYTNvaUE/edit?usp=sharing"&gt;Google Drive&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m having a blast at the conference. The sessions so far have been great. I hope to see all of you here again next year!&lt;/p&gt;</description></item><item><title>Houston TechFest: Intro to Android Programming</title><link>https://andydyer.org/blog/2013/09/28/houston-techfest-intro-to-android-programming/</link><pubDate>Sat, 28 Sep 2013 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2013/09/28/houston-techfest-intro-to-android-programming/</guid><description>&lt;p&gt;I gave an Intro to Android Programming presentation today at &lt;a href="http://www.houstontechfest.org/SitePages/Home.aspx"&gt;Houston TechFest&lt;/a&gt;. The slides are available on &lt;a href="https://docs.google.com/presentation/d/1q3m7_DjXpoPtIzOA5eci8JLLeNnwGsTQRrd7Aj8TofM/edit?usp=sharing"&gt;Google Drive&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks to everyone who attended. Keep Android trill!&lt;/p&gt;</description></item><item><title>Migrating from Ant to Gradle</title><link>https://andydyer.org/blog/2013/08/06/migrating-from-ant-to-gradle/</link><pubDate>Tue, 06 Aug 2013 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2013/08/06/migrating-from-ant-to-gradle/</guid><description>&lt;p&gt;I&amp;rsquo;ll be giving a talk on migrating a custom Eclipse/Ant build to Android Studio/Gradle at &lt;a href="http://www.meetup.com/Houston-Android-Developers/events/132350872/"&gt;tonight&amp;rsquo;s Houston Android Developers meetup&lt;/a&gt;. The slides are available on &lt;a href="https://docs.google.com/presentation/d/15TekbzLYvs1bfAgpRx_2yWsA_il1HPEIkFR-mNmPlSc/edit?usp=sharing"&gt;Google Drive&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I hope to see you there!&lt;/p&gt;</description></item><item><title>Setting item selected state in Android GridView</title><link>https://andydyer.org/blog/2012/09/25/setting-item-selected-state-in-android-gridview/</link><pubDate>Tue, 25 Sep 2012 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2012/09/25/setting-item-selected-state-in-android-gridview/</guid><description>&lt;p&gt;
 When working with the GridView in an Android app recently, I ran into a very strange behavior around setting the
 selected state for a view created in my ArrayAdapter's getView() method.  I'm using selectors to handle the drawable
 states and everything works properly when tapping a list item to select/tapping again to unselect.  When debugging
 the ArrayAdapter's getView() method, I could see that the selected state was being set to the correct value when
 calling view.setSelected(), but the button background was not updated to the proper state.
&lt;/p&gt;</description></item></channel></rss>