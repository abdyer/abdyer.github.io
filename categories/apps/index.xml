<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Apps on Andy Dyer!</title><link>https://andydyer.org/categories/apps/</link><description>Recent content in Apps on Andy Dyer!</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 24 Dec 2017 20:53:35 +0000</lastBuildDate><atom:link href="https://andydyer.org/categories/apps/index.xml" rel="self" type="application/rss+xml"/><item><title>Introducing Biografy</title><link>https://andydyer.org/blog/2017/12/24/introducing-biografy/</link><pubDate>Sun, 24 Dec 2017 20:53:35 +0000</pubDate><guid>https://andydyer.org/blog/2017/12/24/introducing-biografy/</guid><description>What is Biografy? Biografy is a lifelogging app that automatically builds a timeline of each day. The Events view logs events from various apps including music, podcasts, videos, calls and chats. Each event includes rich detail such as the time, activity (stationary, walking, biking, etc.), and location/place. The Motion view lists car/transit trips, bike rides, runs, and walks. With the Map view, you can see where you were when each event occurred and gain insights like where you spend your time based on the clusters of pins.</description></item><item><title>Using a Third Party FAB with CoordinatorLayout</title><link>https://andydyer.org/blog/2015/06/28/using-a-third-party-fab-with-coordinatorlayout/</link><pubDate>Sun, 28 Jun 2015 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2015/06/28/using-a-third-party-fab-with-coordinatorlayout/</guid><description>Before the Design Support Library was announced at Google I/O last month, I had numerous third party libraries in my projects for various elements of Material Design. I&amp;rsquo;ve enjoyed replacing the nav drawer, tabs, and parallax scrolling libraries with their support library counterparts. However, on one of my projects, we needed an expanding floating action button (FAB) similar to the one in Inbox, which the support library does not currently provide.</description></item><item><title>Loading a List of Objects from Firebase</title><link>https://andydyer.org/blog/2015/04/06/loading-a-list-of-objects-from-firebase/</link><pubDate>Mon, 06 Apr 2015 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2015/04/06/loading-a-list-of-objects-from-firebase/</guid><description>I&amp;rsquo;ve been working with Firebase lately in preparation for adding data synchronization to my Music Library app. Their docs did a great job of getting me set up. Using the sample app as a guide, I even got Google+ OAuth working without much trouble. From there, it didn&amp;rsquo;t take long to load data into a Firebase instance partitioned by Google account. All that was left was to query the data out of Firebase and I&amp;rsquo;d be able to see the sync magic in action.</description></item><item><title>Why I'm Unironically Carrying This Small, Older Android Phone</title><link>https://andydyer.org/blog/2015/02/19/why-im-unironically-carrying-this-small-older-android-phone/</link><pubDate>Thu, 19 Feb 2015 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2015/02/19/why-im-unironically-carrying-this-small-older-android-phone/</guid><description>I thoroughly enjoyed my last night in Berlin a little over a week ago; so much that I didn&amp;rsquo;t notice my phone was missing until the end of the night. Shake your head and say it couldn&amp;rsquo;t happen to you. I thought the same thing until it did. Normally, I keep my phone in one of my front pockets, but I was wearing a coat that covered the pocket, making it a bit more difficult to grab my phone quickly to check Google Maps.</description></item><item><title>Music Library 3.0 - Material Design Update</title><link>https://andydyer.org/blog/2014/11/02/music-library-3.0-material-design-update/</link><pubDate>Sun, 02 Nov 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/11/02/music-library-3.0-material-design-update/</guid><description>I started developing Music Library about four years ago when I wanted an app for organizing my record collection. Armed with my Nexus One, Eclipse, and a copy of Apress&amp;rsquo; Pro Android, I spent my nights and weekends learning the inner workings of my now-favorite mobile OS.
Over the years, Music Library has been a playground of sorts for exploring various open source libraries, patterns, and best practices. While there is still a fair amount of code I would write differently today (I&amp;rsquo;m looking at you, ContentProvider), the app has been and continues to be an enjoyable side project.</description></item><item><title>Android's Material Design and The Bauhaus</title><link>https://andydyer.org/blog/2014/07/13/androids-material-design-and-the-bauhaus/</link><pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/07/13/androids-material-design-and-the-bauhaus/</guid><description>Since Android Gingerbread (v2.3), loyalists know that each version has an Easter egg that can be accessed by repeatedly tapping the version number on the Settings &amp;gt; About screen. The Android &amp;ldquo;L&amp;rdquo; Preview is no exception.
While test driving the new version, I naturally had to see what Google had hidden for me in their latest release. Previous versions have had everything from gingerbread zombies to Nyandroids and a pile of jelly beans.</description></item><item><title>Fun with Android Wear</title><link>https://andydyer.org/blog/2014/07/12/fun-with-android-wear/</link><pubDate>Sat, 12 Jul 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/07/12/fun-with-android-wear/</guid><description>I got my LG G Android Wear smart watch earlier this week and dove right into developing for it.
My first project was Deutsch Uhr, a text-based German language watch face inspired by my favorite Pebble watch face. I had fun adding animations for the hour/minute/day changes and learning what makes a Wear app tick (pun intended, I always do). A big thanks to my friend Daniel Ward for help getting started.</description></item><item><title>Presenting: Wrist Presenter for Android and the Pebble Smartwatch</title><link>https://andydyer.org/blog/2014/03/07/presenting-wrist-presenter-for-android-and-the-pebble-smartwatch/</link><pubDate>Fri, 07 Mar 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/03/07/presenting-wrist-presenter-for-android-and-the-pebble-smartwatch/</guid><description>Shortly after getting a Pebble Smartwatch this past Christmas, my coworker and all-around-cool-dude Matthew Morey asked me if I&amp;rsquo;d be interested in developing the Android version of his Wrist Presenter iOS app. Luckily, he already had a rock solid Pebble app developed, so I didn&amp;rsquo;t have to flex my meager C programming skills.
Wrist Presenter turns your Pebble Smartwatch into a remote for presentations running on your Android or iOS device.</description></item><item><title>Introducing Kollektor</title><link>https://andydyer.org/blog/2013/12/28/introducing-kollektor/</link><pubDate>Sat, 28 Dec 2013 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2013/12/28/introducing-kollektor/</guid><description>Why a new app? When I first decided to get into Android development, I created the Music Library app to catalog my vinyl collection. It served me well as I learned the ins and outs of Android programming including content providers, interacting with other applications via intents, working with the file system to save/load images, making API requests, etc. In order to test the workings of the Android app market, I published the ad supported Music Library Free and the paid Music Library versions of the app.</description></item></channel></rss>