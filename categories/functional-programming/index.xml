<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Functional Programming on Andy Dyer</title>
    <link>http://andydyer.org/categories/functional-programming/</link>
    <description>Recent content in Functional Programming on Andy Dyer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Feb 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://andydyer.org/categories/functional-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Functional Queue in JavaScript</title>
      <link>http://andydyer.org/blog/2012/02/03/a-functional-queue-in-javascript/</link>
      <pubDate>Fri, 03 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>http://andydyer.org/blog/2012/02/03/a-functional-queue-in-javascript/</guid>
      <description>It&#39;s been over a year since I&#39;ve posted here, but I&#39;ve been busy delving into Android and Ruby on Rails among other things. To get back into blogging (hopefully more regularly...we&#39;ll see), I thought I&#39;d share an interesting JavaScript exercise I was asked to complete as part of a job interview recently.  The task was to build a functional queue in JavaScript. A functional queue is a queue (first in, first out) which is implemented with no side-effects.</description>
    </item>
    
  </channel>
</rss>