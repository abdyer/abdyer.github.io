<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Material Design on Andy Dyer</title><link>https://andydyer.org/categories/material-design/</link><description>Recent content in Material Design on Andy Dyer</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 28 Jun 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://andydyer.org/categories/material-design/index.xml" rel="self" type="application/rss+xml"/><item><title>Using a Third Party FAB with CoordinatorLayout</title><link>https://andydyer.org/blog/2015/06/28/using-a-third-party-fab-with-coordinatorlayout/</link><pubDate>Sun, 28 Jun 2015 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2015/06/28/using-a-third-party-fab-with-coordinatorlayout/</guid><description>&lt;p>Before the Design Support Library was announced at Google I/O last month, I had numerous third party libraries in my projects for various elements of Material Design. I&amp;rsquo;ve enjoyed replacing the nav drawer, tabs, and parallax scrolling libraries with their support library counterparts. However, on one of my projects, we needed an expanding floating action button (FAB) similar to the one in &lt;a href="https://play.google.com/store/apps/details?id=com.google.android.apps.inbox">Inbox&lt;/a>, which the support library does not currently provide.&lt;/p></description></item><item><title>Music Library 3.0 - Material Design Update</title><link>https://andydyer.org/blog/2014/11/02/music-library-3.0-material-design-update/</link><pubDate>Sun, 02 Nov 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/11/02/music-library-3.0-material-design-update/</guid><description>&lt;img src="https://andydyer.org/images/music_library_icon.png" alt="Music Library" style="width: 150px; float: left; margin-right: 20px" />
I started developing [Music Library](https://play.google.com/store/apps/details?id=com.dandydev.medialibrary) about four years ago when I wanted an app for organizing my record collection. Armed with my Nexus One, Eclipse, and a copy of Apress' [Pro Android](http://www.amazon.com/gp/product/1430246804/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1430246804&amp;linkCode=as2&amp;tag=slacod-20&amp;linkId=FMLK73AOGDPPJEM3), I spent my nights and weekends learning the inner workings of my now-favorite mobile OS.
&lt;p>Over the years, Music Library has been a playground of sorts for exploring various open source libraries, patterns, and best practices. While there is still a fair amount of code I would write differently today (I&amp;rsquo;m looking at you, ContentProvider), the app has been and continues to be an enjoyable side project.&lt;/p></description></item><item><title>Android's Material Design and The Bauhaus</title><link>https://andydyer.org/blog/2014/07/13/androids-material-design-and-the-bauhaus/</link><pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/07/13/androids-material-design-and-the-bauhaus/</guid><description>&lt;p>Since Android Gingerbread (v2.3), loyalists know that each version has an Easter egg that can be accessed by repeatedly tapping the version number on the Settings &amp;gt; About screen. The Android &amp;ldquo;L&amp;rdquo; Preview is no exception.&lt;/p>
&lt;p>While test driving the new version, I naturally had to see what Google had hidden for me in their latest release. Previous versions have had everything from &lt;a href="https://www.youtube.com/watch?v=PeAFCIvqNxc">gingerbread zombies&lt;/a> to &lt;a href="https://www.youtube.com/watch?v=DfY73GBBHxg">Nyandroids&lt;/a> and a &lt;a href="https://www.youtube.com/watch?v=iN-nJdAJS7g">pile of jelly beans&lt;/a>. The Android &amp;ldquo;L&amp;rdquo; Preview build has a &lt;a href="https://www.youtube.com/watch?v=_He5MIYJas8">simple animation of random overlapping red and blue rectangles&lt;/a>. Several Android blogs mentioned this, but dismissed it as &lt;a href="http://www.androidcentral.com/android-l-Previews-easter-egg-webdriver-torso">mysterious&lt;/a> and &lt;a href="http://www.slashgear.com/hands-on-with-the-android-l-features-google-didnt-mention-27335613/">strange&lt;/a>. While these random rectangles are clearly the same used by Google&amp;rsquo;s &lt;a href="http://www.bbc.com/news/technology-27778071">WebDriver Torso&lt;/a> YouTube video quality testing, so far everyone seems to have missed the most obvious explanation.&lt;/p></description></item></channel></rss>