<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Maven on Andy Dyer</title><link>https://andydyer.org/categories/maven/</link><description>Recent content in Maven on Andy Dyer</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 05 Oct 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://andydyer.org/categories/maven/index.xml" rel="self" type="application/rss+xml"/><item><title>Hosting Android Dependencies on GitHub</title><link>https://andydyer.org/blog/2014/10/05/hosting-android-dependencies-on-github/</link><pubDate>Sun, 05 Oct 2014 00:00:00 +0000</pubDate><guid>https://andydyer.org/blog/2014/10/05/hosting-android-dependencies-on-github/</guid><description>&lt;p>As I mentioned in my &lt;a href="http://andydyer.org/blog/2014/09/29/delombok-and-javadoc-with-gradle/">last post&lt;/a>, I&amp;rsquo;m developing an SDK at work. The libraries I use most frequently in my apps are all included as Maven dependencies. Adding a line to my &lt;code>build.gradle&lt;/code> file is much preferred to downloading a JAR file. To make the SDK as easy as possible for developers to include in their projects, I wanted to deliver it the same way.&lt;/p>
&lt;p>&lt;a href="http://central.sonatype.org/">Maven Central&lt;/a> is the de facto repository for open source library hosting. Since the SDK I&amp;rsquo;m developing is part of a product and as such will not be open source, I needed to find another place to host the binary that would still allow it to be included via Maven.&lt;/p></description></item></channel></rss>