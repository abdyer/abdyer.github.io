<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on Andy Dyer</title><link>https://andydyer.org/categories/programming/</link><description>Recent content in Programming on Andy Dyer</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 01 May 2021 09:01:11 +0100</lastBuildDate><atom:link href="https://andydyer.org/categories/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Spoiling the Dark plot with Kotlin</title><link>https://andydyer.org/blog/2021/05/01/spoiling-the-dark-plot-with-kotlin/</link><pubDate>Sat, 01 May 2021 09:01:11 +0100</pubDate><guid>https://andydyer.org/blog/2021/05/01/spoiling-the-dark-plot-with-kotlin/</guid><description>Intro As promised in my last post, it&amp;rsquo;s time to use our family tree DSL to spoil the plot of Netflix&amp;rsquo;s Dark series! ðŸ˜ˆ
To quickly recap, we have a small but functional (my puns are always intended) DSL for building a family tree in Kotlin:
The Dark family trees in code The family trees are of course the focus of the series as they are revealed to us piecemeal; episode by episode, season by season.</description></item><item><title>Building a Family Tree DSL with Jetpack ComposeÂ syntax</title><link>https://andydyer.org/blog/2021/03/21/building-a-family-tree-dsl-with-jetpack-compose-syntax/</link><pubDate>Sun, 21 Mar 2021 20:05:20 +0100</pubDate><guid>https://andydyer.org/blog/2021/03/21/building-a-family-tree-dsl-with-jetpack-compose-syntax/</guid><description>Originally published on ProAndroidDev
Why build a DSL? Ever since first getting into Kotlin, I&amp;rsquo;ve known it has a few things that makes building domain-specific languages (DSLs) easier. I&amp;rsquo;ve read the mind-expanding type-safe builders guide for building a DSL for HTML, but until recently I hadn&amp;rsquo;t found a good use case for building a DSL of my own.
My team at Zalando maintains server-driven UI libraries for Android &amp;amp; iOS that power completely dynamic screens such as home, brand homes, collections, and various landing pages in the Zalando fashion store apps.</description></item></channel></rss>